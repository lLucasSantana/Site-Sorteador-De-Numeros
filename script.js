document.addEventListener("DOMContentLoaded", () => {
  // Seleciona os elementos do DOM
  const minNumberInput = document.getElementById("min-number"); // Campo de entrada para o n√∫mero m√≠nimo
  const maxNumberInput = document.getElementById("max-number"); // Campo de entrada para o n√∫mero m√°ximo
  const quantityInput = document.getElementById("quantity"); // Campo de entrada para a quantidade de n√∫meros a serem sorteados
  const drawButton = document.getElementById("draw-button"); // Bot√£o para iniciar o sorteio
  const numberDisplay = document.getElementById("number-display"); // Exibi√ß√£o dos n√∫meros sorteados
  const drawCountDisplay = document.getElementById("draw-count"); // Exibi√ß√£o do n√∫mero total de sorteios realizados
  const drawnNumbersDisplay = document.getElementById("drawn-numbers"); // Exibi√ß√£o de todos os n√∫meros sorteados
  const countdownContainer = document.getElementById("countdown-container"); // Cont√™iner para o temporizador de contagem regressiva
  const countdownDisplay = document.getElementById("countdown"); // Exibi√ß√£o do temporizador de contagem regressiva
  const resetButton = document.getElementById("reset-button"); // Bot√£o para resetar o sorteio
  const toggleThemeButton = document.getElementById("toggle-theme"); // Bot√£o para alternar entre temas (claro e escuro)
  const orderCheckbox = document.getElementById("order-checkbox"); // Checkbox para ordenar os n√∫meros sorteados
  const showCountdownCheckbox = document.getElementById(
    "show-countdown-checkbox"
  ); // Checkbox para habilitar/desabilitar a contagem regressiva

  let drawCount = 0; // Contador para o total de sorteios
  const allDrawnNumbers = []; // Array para armazenar todos os n√∫meros sorteados

  // Evento de clique no bot√£o de sorteio
  drawButton.addEventListener("click", () => {
    const minNumber = parseInt(minNumberInput.value); // Converte o valor m√≠nimo para n√∫mero inteiro
    const maxNumber = parseInt(maxNumberInput.value); // Converte o valor m√°ximo para n√∫mero inteiro
    const quantity = parseInt(quantityInput.value); // Converte a quantidade para n√∫mero inteiro

    // Verifica se os campos est√£o preenchidos corretamente
    if (
      isNaN(minNumber) ||
      isNaN(maxNumber) ||
      isNaN(quantity) ||
      quantity < 1
    ) {
      alert("Por favor, preencha os campos corretamente."); // Exibe uma mensagem de erro se algo estiver errado
      return;
    }

    // Verifica se a contagem regressiva est√° habilitada
    if (showCountdownCheckbox.checked) {
      countdownContainer.classList.add("visible"); // Torna o cont√™iner da contagem regressiva vis√≠vel
      let countdownValue = 5; // Define o valor inicial da contagem
      countdownDisplay.textContent = countdownValue; // Atualiza a exibi√ß√£o do contador

      // Intervalo para realizar a contagem regressiva
      const countdownInterval = setInterval(() => {
        countdownValue--;
        countdownDisplay.textContent = countdownValue; // Atualiza a exibi√ß√£o do valor decrementado

        if (countdownValue <= 0) {
          clearInterval(countdownInterval); // Para o intervalo quando chega a 0
          countdownContainer.classList.remove("visible"); // Oculta o cont√™iner da contagem

          drawRandomNumbers(minNumber, maxNumber, quantity); // Realiza o sorteio
        }
      }, 1000); // Intervalo de 1 segundo
    } else {
      drawRandomNumbers(minNumber, maxNumber, quantity); // Realiza o sorteio imediatamente
    }
  });

  // Fun√ß√£o para sortear n√∫meros aleat√≥rios
  const drawRandomNumbers = (minNumber, maxNumber, quantity) => {
    const drawnNumbers = []; // Array para armazenar os n√∫meros sorteados no sorteio atual
    const uniqueNumbers = new Set(); // Conjunto para garantir que n√£o haja n√∫meros repetidos

    while (drawnNumbers.length < quantity) {
      const randomNumber =
        Math.floor(Math.random() * (maxNumber - minNumber + 1)) + minNumber; // Gera um n√∫mero aleat√≥rio entre o m√≠nimo e o m√°ximo

      if (!uniqueNumbers.has(randomNumber)) {
        uniqueNumbers.add(randomNumber); // Adiciona o n√∫mero ao conjunto para evitar duplicatas
        drawnNumbers.push(randomNumber); // Adiciona o n√∫mero ao array
      }
    }

    // Verifica se a ordena√ß√£o est√° habilitada e ordena os n√∫meros
    if (orderCheckbox.checked) {
      drawnNumbers.sort((a, b) => a - b);
    }

    allDrawnNumbers.push(...drawnNumbers); // Adiciona os n√∫meros sorteados ao array global

    numberDisplay.classList.add("animate"); // Adiciona uma classe de anima√ß√£o para exibi√ß√£o dos n√∫meros

    setTimeout(() => {
      numberDisplay.textContent = drawnNumbers.join(", "); // Exibe os n√∫meros sorteados
      drawCount++; // Incrementa o contador de sorteios
      drawCountDisplay.textContent = drawCount; // Atualiza a exibi√ß√£o do total de sorteios

      drawnNumbersDisplay.textContent = allDrawnNumbers.join(", "); // Exibe todos os n√∫meros sorteados

      setTimeout(() => {
        numberDisplay.classList.remove("animate"); // Remove a anima√ß√£o para que possa ser reaplicada posteriormente
      }, 1000); // Remove a classe ap√≥s 1 segundo
    }, 500); // Exibe o n√∫mero com um pequeno atraso para permitir a anima√ß√£o
  };

  // Evento de clique no bot√£o de reset
  resetButton.addEventListener("click", () => {
    minNumberInput.value = 1; // Reseta o valor m√≠nimo para 1
    maxNumberInput.value = 100; // Reseta o valor m√°ximo para 100
    quantityInput.value = 1; // Reseta a quantidade para 1
    numberDisplay.textContent = "Clique no bot√£o abaixo para sortear"; // Reseta o texto de exibi√ß√£o
    drawnNumbersDisplay.textContent = ""; // Limpa os n√∫meros exibidos
    allDrawnNumbers.length = 0; // Limpa o array global de n√∫meros sorteados
    drawCount = 0; // Reseta o total de sorteios
    drawCountDisplay.textContent = drawCount; // Atualiza a exibi√ß√£o do total de sorteios
  });

  // Evento de clique no bot√£o de altern√¢ncia de tema
  toggleThemeButton.addEventListener("click", () => {
    document.body.classList.toggle("dark-theme"); // Alterna a classe de tema escuro no corpo da p√°gina
    toggleThemeButton.textContent = document.body.classList.contains(
      "dark-theme"
    )
      ? "üåû" // √çcone para o tema claro
      : "üåô"; // √çcone para o tema escuro
  });
});
